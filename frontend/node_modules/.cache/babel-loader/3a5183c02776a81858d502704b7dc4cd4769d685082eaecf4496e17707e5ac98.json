{"ast":null,"code":"var _jsxFileName = \"E:\\\\Games\\\\CrossMove\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [board, setBoard] = useState(Array(3).fill(null).map(() => Array(3).fill(null)));\n  const [phase, setPhase] = useState(\"place\");\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [status, setStatus] = useState(\"Your turn to place your coins!\");\n  const handleCellClick = (row, col) => {\n    if (phase === \"place\") {\n      if (!board[row][col]) {\n        const newBoard = board.map(r => [...r]);\n        newBoard[row][col] = \"X\";\n        setBoard(newBoard);\n        sendToBackend(newBoard);\n      }\n    } else if (phase === \"move\") {\n      if (selectedPiece) {\n        const [fromRow, fromCol] = selectedPiece;\n        if (isValidMove(fromRow, fromCol, row, col)) {\n          const newBoard = board.map(r => [...r]);\n          newBoard[fromRow][fromCol] = null;\n          newBoard[row][col] = \"X\";\n          setBoard(newBoard);\n          setSelectedPiece(null);\n          sendToBackend(newBoard);\n        } else {\n          setStatus(\"Invalid move! Select a valid cell.\");\n        }\n      } else if (board[row][col] === \"X\") {\n        setSelectedPiece([row, col]);\n        setStatus(\"Select a destination.\");\n      }\n    }\n  };\n  const isValidMove = (fromRow, fromCol, toRow, toCol) => {\n    const adjacent = [[fromRow - 1, fromCol], [fromRow + 1, fromCol], [fromRow, fromCol - 1], [fromRow, fromCol + 1]];\n    return adjacent.some(([r, c]) => r === toRow && c === toCol && !board[toRow][toCol]);\n  };\n  const sendToBackend = async newBoard => {\n    try {\n      const response = await axios.post(\"http://localhost:8080/api/game/best-move\", {\n        board: newBoard,\n        phase\n      });\n      const {\n        row,\n        col\n      } = response.data;\n      if (row !== -1 && col !== -1) {\n        const updatedBoard = board.map(r => [...r]);\n        updatedBoard[row][col] = \"O\";\n        setBoard(updatedBoard);\n        setStatus(\"Your turn!\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching the best move:\", error);\n    }\n  };\n  const renderCell = (row, col) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `cell ${board[row][col] ? \"taken\" : \"\"} ${selectedPiece && selectedPiece[0] === row && selectedPiece[1] === col ? \"selected\" : \"\"}`,\n    onClick: () => handleCellClick(row, col),\n    children: board[row][col]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Advanced Tic-Tac-Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((row, rowIndex) => row.map((_, colIndex) => renderCell(rowIndex, colIndex)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"H7rUhKcpOWaCG1GPTwYW1fQ8Bwk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","board","setBoard","Array","fill","map","phase","setPhase","selectedPiece","setSelectedPiece","status","setStatus","handleCellClick","row","col","newBoard","r","sendToBackend","fromRow","fromCol","isValidMove","toRow","toCol","adjacent","some","c","response","post","data","updatedBoard","error","console","renderCell","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","id","rowIndex","_","colIndex","_c","$RefreshReg$"],"sources":["E:/Games/CrossMove/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst App = () => {\r\n  const [board, setBoard] = useState(Array(3).fill(null).map(() => Array(3).fill(null)));\r\n  const [phase, setPhase] = useState(\"place\");\r\n  const [selectedPiece, setSelectedPiece] = useState(null);\r\n  const [status, setStatus] = useState(\"Your turn to place your coins!\");\r\n\r\n  const handleCellClick = (row, col) => {\r\n    if (phase === \"place\") {\r\n      if (!board[row][col]) {\r\n        const newBoard = board.map((r) => [...r]);\r\n        newBoard[row][col] = \"X\";\r\n        setBoard(newBoard);\r\n        sendToBackend(newBoard);\r\n      }\r\n    } else if (phase === \"move\") {\r\n      if (selectedPiece) {\r\n        const [fromRow, fromCol] = selectedPiece;\r\n        if (isValidMove(fromRow, fromCol, row, col)) {\r\n          const newBoard = board.map((r) => [...r]);\r\n          newBoard[fromRow][fromCol] = null;\r\n          newBoard[row][col] = \"X\";\r\n          setBoard(newBoard);\r\n          setSelectedPiece(null);\r\n          sendToBackend(newBoard);\r\n        } else {\r\n          setStatus(\"Invalid move! Select a valid cell.\");\r\n        }\r\n      } else if (board[row][col] === \"X\") {\r\n        setSelectedPiece([row, col]);\r\n        setStatus(\"Select a destination.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const isValidMove = (fromRow, fromCol, toRow, toCol) => {\r\n    const adjacent = [\r\n      [fromRow - 1, fromCol],\r\n      [fromRow + 1, fromCol],\r\n      [fromRow, fromCol - 1],\r\n      [fromRow, fromCol + 1],\r\n    ];\r\n    return adjacent.some(([r, c]) => r === toRow && c === toCol && !board[toRow][toCol]);\r\n  };\r\n\r\n  const sendToBackend = async (newBoard) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8080/api/game/best-move\", {\r\n        board: newBoard,\r\n        phase,\r\n      });\r\n      const { row, col } = response.data;\r\n      if (row !== -1 && col !== -1) {\r\n        const updatedBoard = board.map((r) => [...r]);\r\n        updatedBoard[row][col] = \"O\";\r\n        setBoard(updatedBoard);\r\n        setStatus(\"Your turn!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching the best move:\", error);\r\n    }\r\n  };\r\n\r\n  const renderCell = (row, col) => (\r\n    <div\r\n      className={`cell ${board[row][col] ? \"taken\" : \"\"} ${selectedPiece &&\r\n        selectedPiece[0] === row &&\r\n        selectedPiece[1] === col\r\n        ? \"selected\"\r\n        : \"\"\r\n        }`}\r\n      onClick={() => handleCellClick(row, col)}\r\n    >\r\n      {board[row][col]}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Advanced Tic-Tac-Toe</h1>\r\n      <div id=\"status\">{status}</div>\r\n      <div className=\"board\">\r\n        {board.map((row, rowIndex) =>\r\n          row.map((_, colIndex) => renderCell(rowIndex, colIndex))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}