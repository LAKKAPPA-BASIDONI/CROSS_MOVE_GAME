{"ast":null,"code":"export const fetchAiMove = async (board, phase) => {\n  try {\n    const response = await fetch(\"/api/ai-move\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        board,\n        phase\n      })\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching AI move:\", error);\n    return null;\n  }\n};\nexport const validateMove = async (from, to, board) => {\n  try {\n    const response = await fetch(\"/api/validate-move\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        from,\n        to,\n        board\n      })\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error validating move:\", error);\n    return false;\n  }\n};","map":{"version":3,"names":["fetchAiMove","board","phase","response","fetch","method","headers","body","JSON","stringify","json","error","console","validateMove","from","to"],"sources":["E:/Games/CrossMove/frontend/src/utils/api.js"],"sourcesContent":["export const fetchAiMove = async (board, phase) => {\r\n    try {\r\n      const response = await fetch(\"/api/ai-move\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ board, phase }),\r\n      });\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(\"Error fetching AI move:\", error);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  export const validateMove = async (from, to, board) => {\r\n    try {\r\n      const response = await fetch(\"/api/validate-move\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ from, to, board }),\r\n      });\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(\"Error validating move:\", error);\r\n      return false;\r\n    }\r\n  };\r\n  "],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,MAAAA,CAAOC,KAAK,EAAEC,KAAK,KAAK;EAC/C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAc,EAAE;MAC3CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAM,CAAC;IACvC,CAAC,CAAC;IACF,OAAO,MAAMC,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAAA,CAAOC,IAAI,EAAEC,EAAE,EAAEd,KAAK,KAAK;EACrD,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAoB,EAAE;MACjDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEK,IAAI;QAAEC,EAAE;QAAEd;MAAM,CAAC;IAC1C,CAAC,CAAC;IACF,OAAO,MAAME,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}