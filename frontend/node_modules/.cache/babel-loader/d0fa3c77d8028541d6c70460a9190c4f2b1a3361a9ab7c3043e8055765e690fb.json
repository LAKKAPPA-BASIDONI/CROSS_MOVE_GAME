{"ast":null,"code":"var _jsxFileName = \"E:\\\\Games\\\\CrossMove\\\\frontend\\\\src\\\\components\\\\GameBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './GameBoard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst edges = [{\n  id: 0,\n  x: 0,\n  y: 0\n},\n// Center\n{\n  id: 1,\n  x: -1,\n  y: -1\n}, {\n  id: 2,\n  x: 1,\n  y: -1\n}, {\n  id: 3,\n  x: -1,\n  y: 1\n}, {\n  id: 4,\n  x: 1,\n  y: 1\n}, {\n  id: 5,\n  x: 0,\n  y: -1\n}, {\n  id: 6,\n  x: 0,\n  y: 1\n}, {\n  id: 7,\n  x: -1,\n  y: 0\n}, {\n  id: 8,\n  x: 1,\n  y: 0\n}];\nconst GameBoard = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [currentPlayer, setCurrentPlayer] = useState(\"Player1\");\n  const [stones, setStones] = useState({\n    Player1: 3,\n    Player2: 3\n  });\n  const handleEdgeClick = async id => {\n    if (board[id] || stones[currentPlayer] <= 0) return;\n    const newBoard = [...board];\n    newBoard[id] = currentPlayer;\n    setBoard(newBoard);\n    setStones({\n      ...stones,\n      [currentPlayer]: stones[currentPlayer] - 1\n    });\n    try {\n      const response = await axios.post('http://localhost:8080/api/make-move', {\n        board: newBoard,\n        player: currentPlayer\n      });\n      if (response.data.winner) {\n        alert(`${response.data.winner} wins!`);\n        resetGame();\n      } else {\n        setCurrentPlayer(currentPlayer === \"Player1\" ? \"Player2\" : \"Player1\");\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const resetGame = () => {\n    setBoard(Array(9).fill(null));\n    setStones({\n      Player1: 3,\n      Player2: 3\n    });\n    setCurrentPlayer(\"Player1\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-board\",\n    children: edges.map(edge => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `edge edge-${edge.id} ${board[edge.id]}`,\n      onClick: () => handleEdgeClick(edge.id),\n      children: board[edge.id]\n    }, edge.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(GameBoard, \"ACbFK2UB6Lw3Lq5NsV8GsI7pA5A=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","edges","id","x","y","GameBoard","_s","board","setBoard","Array","fill","currentPlayer","setCurrentPlayer","stones","setStones","Player1","Player2","handleEdgeClick","newBoard","response","post","player","data","winner","alert","resetGame","err","console","error","className","children","map","edge","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Games/CrossMove/frontend/src/components/GameBoard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './GameBoard.css';\r\n\r\nconst edges = [\r\n  { id: 0, x: 0, y: 0 }, // Center\r\n  { id: 1, x: -1, y: -1 },\r\n  { id: 2, x: 1, y: -1 },\r\n  { id: 3, x: -1, y: 1 },\r\n  { id: 4, x: 1, y: 1 },\r\n  { id: 5, x: 0, y: -1 },\r\n  { id: 6, x: 0, y: 1 },\r\n  { id: 7, x: -1, y: 0 },\r\n  { id: 8, x: 1, y: 0 }\r\n];\r\n\r\nconst GameBoard = () => {\r\n  const [board, setBoard] = useState(Array(9).fill(null));\r\n  const [currentPlayer, setCurrentPlayer] = useState(\"Player1\");\r\n  const [stones, setStones] = useState({ Player1: 3, Player2: 3 });\r\n\r\n  const handleEdgeClick = async (id) => {\r\n    if (board[id] || stones[currentPlayer] <= 0) return;\r\n\r\n    const newBoard = [...board];\r\n    newBoard[id] = currentPlayer;\r\n    setBoard(newBoard);\r\n    setStones({ ...stones, [currentPlayer]: stones[currentPlayer] - 1 });\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/api/make-move', {\r\n        board: newBoard,\r\n        player: currentPlayer,\r\n      });\r\n      if (response.data.winner) {\r\n        alert(`${response.data.winner} wins!`);\r\n        resetGame();\r\n      } else {\r\n        setCurrentPlayer(currentPlayer === \"Player1\" ? \"Player2\" : \"Player1\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setBoard(Array(9).fill(null));\r\n    setStones({ Player1: 3, Player2: 3 });\r\n    setCurrentPlayer(\"Player1\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-board\">\r\n      {edges.map((edge) => (\r\n        <div\r\n          key={edge.id}\r\n          className={`edge edge-${edge.id} ${board[edge.id]}`}\r\n          onClick={() => handleEdgeClick(edge.id)}\r\n        >\r\n          {board[edge.id]}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}