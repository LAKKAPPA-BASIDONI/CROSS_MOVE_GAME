{"ast":null,"code":"// Sending Move Request (Placing a Piece)\nexport const fetchAiMove = async (row, col, phase) => {\n  const response = await fetch(\"http://localhost:8080/api/ai-move\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      phase: phase,\n      row: row,\n      col: col\n    })\n  });\n  const data = await response.json();\n  console.log(data);\n  // Handle the response here (e.g., update UI with the new board state)\n};\n\n// Sending Move Request (Moving a Piece)\nconst sendMoveRequest = async (fromRow, fromCol, toRow, toCol, phase) => {\n  const response = await fetch(\"http://localhost:8080/api/handle-move\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      phase: phase,\n      fromRow: fromRow,\n      fromCol: fromCol,\n      toRow: toRow,\n      toCol: toCol\n    })\n  });\n  const data = await response.json();\n  console.log(data);\n  // Handle the response here (e.g., update UI with the new board state)\n};\nexport const validateMove = async (from, to, board) => {\n  try {\n    const response = await fetch(\"http://localhost:8080/api/validate-move\", {\n      method: \"POST\",\n      // Ensure this is 'POST', not 'GET'\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        from,\n        to,\n        board\n      }) // Ensure you're sending JSON data\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error validating move:\", error);\n    return false;\n  }\n};","map":{"version":3,"names":["fetchAiMove","row","col","phase","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","sendMoveRequest","fromRow","fromCol","toRow","toCol","validateMove","from","to","board","error"],"sources":["E:/Games/CrossMove/frontend/src/utils/api.js"],"sourcesContent":["// Sending Move Request (Placing a Piece)\r\nexport const fetchAiMove = async (row, col, phase) => {\r\n  const response = await fetch(\"http://localhost:8080/api/ai-move\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      phase: phase,\r\n      row: row,\r\n      col: col,\r\n    }),\r\n  });\r\n\r\n  const data = await response.json();\r\n  console.log(data);\r\n  // Handle the response here (e.g., update UI with the new board state)\r\n};\r\n\r\n// Sending Move Request (Moving a Piece)\r\nconst sendMoveRequest = async (fromRow, fromCol, toRow, toCol, phase) => {\r\n  const response = await fetch(\"http://localhost:8080/api/handle-move\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      phase: phase,\r\n      fromRow: fromRow,\r\n      fromCol: fromCol,\r\n      toRow: toRow,\r\n      toCol: toCol,\r\n    }),\r\n  });\r\n\r\n  const data = await response.json();\r\n  console.log(data);\r\n  // Handle the response here (e.g., update UI with the new board state)\r\n};\r\n\r\n\r\nexport const validateMove = async (from, to, board) => {\r\n  try {\r\n      const response = await fetch(\"http://localhost:8080/api/validate-move\", {\r\n          method: \"POST\",  // Ensure this is 'POST', not 'GET'\r\n          headers: {\r\n              \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ from, to, board }),  // Ensure you're sending JSON data\r\n      });\r\n      return await response.json();\r\n  } catch (error) {\r\n      console.error(\"Error validating move:\", error);\r\n      return false;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,EAAEC,KAAK,KAAK;EACpD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;IAChEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBP,KAAK,EAAEA,KAAK;MACZF,GAAG,EAAEA,GAAG;MACRC,GAAG,EAAEA;IACP,CAAC;EACH,CAAC,CAAC;EAEF,MAAMS,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjB;AACF,CAAC;;AAED;AACA,MAAMI,eAAe,GAAG,MAAAA,CAAOC,OAAO,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEhB,KAAK,KAAK;EACvE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;IACpEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBP,KAAK,EAAEA,KAAK;MACZa,OAAO,EAAEA,OAAO;MAChBC,OAAO,EAAEA,OAAO;MAChBC,KAAK,EAAEA,KAAK;MACZC,KAAK,EAAEA;IACT,CAAC;EACH,CAAC,CAAC;EAEF,MAAMR,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjB;AACF,CAAC;AAGD,OAAO,MAAMS,YAAY,GAAG,MAAAA,CAAOC,IAAI,EAAEC,EAAE,EAAEC,KAAK,KAAK;EACrD,IAAI;IACA,MAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;MACpEC,MAAM,EAAE,MAAM;MAAG;MACjBC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEW,IAAI;QAAEC,EAAE;QAAEC;MAAM,CAAC,CAAC,CAAG;IAChD,CAAC,CAAC;IACF,OAAO,MAAMnB,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOY,KAAK,EAAE;IACZX,OAAO,CAACW,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO,KAAK;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}