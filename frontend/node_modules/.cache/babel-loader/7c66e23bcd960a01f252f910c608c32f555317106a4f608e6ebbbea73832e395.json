{"ast":null,"code":"var _jsxFileName = \"E:\\\\Games\\\\CrossMove\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GameBoard from './components/GameBoard.js';\nimport GameStatus from './GameStatus';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [status, setStatus] = useState('Game has not started yet.');\n  const [board, setBoard] = useState(Array(3).fill(Array(3).fill(null)));\n  useEffect(() => {\n    fetch('http://localhost:8080/game/start').then(response => response.text()).then(data => setStatus(data));\n  }, []);\n  const handleCellClick = async (row, col) => {\n    if (phase === 'place') {\n      const response = await fetch('http://localhost:8080/game/move', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          row,\n          col\n        })\n      });\n      const data = await response.json();\n      statusElement.textContent = data.message;\n    } else if (phase === 'move') {\n      // Handle move logic here\n    }\n  };\n  const startNewGame = async () => {\n    const response = await fetch('http://localhost:8080/game/newGame', {\n      method: 'POST'\n    });\n    // Reload board for a fresh game\n    renderBoard();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Advanced Tic-Tac-Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameStatus, {\n      status: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameBoard, {\n      board: board,\n      onCellClick: handleCellClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"A5TETJmkNYJ8+g334rRKLAuXF6o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GameBoard","GameStatus","jsxDEV","_jsxDEV","App","_s","status","setStatus","board","setBoard","Array","fill","fetch","then","response","text","data","handleCellClick","row","col","phase","method","headers","body","JSON","stringify","json","statusElement","textContent","message","startNewGame","renderBoard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCellClick","_c","$RefreshReg$"],"sources":["E:/Games/CrossMove/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport GameBoard from './components/GameBoard.js';\r\nimport GameStatus from './GameStatus';\r\n\r\nfunction App() {\r\n  const [status, setStatus] = useState('Game has not started yet.');\r\n  const [board, setBoard] = useState(Array(3).fill(Array(3).fill(null)));\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8080/game/start')\r\n      .then(response => response.text())\r\n      .then(data => setStatus(data));\r\n  }, []);\r\n\r\n  const handleCellClick = async (row, col) => {\r\n    if (phase === 'place') {\r\n        const response = await fetch('http://localhost:8080/game/move', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ row, col }),\r\n        });\r\n        const data = await response.json();\r\n        statusElement.textContent = data.message;\r\n    } else if (phase === 'move') {\r\n        // Handle move logic here\r\n    }\r\n};\r\n\r\nconst startNewGame = async () => {\r\n    const response = await fetch('http://localhost:8080/game/newGame', {\r\n        method: 'POST',\r\n    });\r\n    // Reload board for a fresh game\r\n    renderBoard();\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Advanced Tic-Tac-Toe</h1>\r\n      <GameStatus status={status} />\r\n      <GameBoard board={board} onCellClick={handleCellClick} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,2BAA2B,CAAC;EACjE,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACY,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EAEtEZ,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIT,SAAS,CAACS,IAAI,CAAC,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,eAAe,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,KAAK;IAC1C,IAAIC,KAAK,KAAK,OAAO,EAAE;MACnB,MAAMN,QAAQ,GAAG,MAAMF,KAAK,CAAC,iCAAiC,EAAE;QAC5DS,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP,GAAG;UAAEC;QAAI,CAAC;MACrC,CAAC,CAAC;MACF,MAAMH,IAAI,GAAG,MAAMF,QAAQ,CAACY,IAAI,CAAC,CAAC;MAClCC,aAAa,CAACC,WAAW,GAAGZ,IAAI,CAACa,OAAO;IAC5C,CAAC,MAAM,IAAIT,KAAK,KAAK,MAAM,EAAE;MACzB;IAAA;EAER,CAAC;EAED,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMhB,QAAQ,GAAG,MAAMF,KAAK,CAAC,oCAAoC,EAAE;MAC/DS,MAAM,EAAE;IACZ,CAAC,CAAC;IACF;IACAU,WAAW,CAAC,CAAC;EACjB,CAAC;EAGC,oBACE5B,OAAA;IAAK6B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB9B,OAAA;MAAA8B,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BlC,OAAA,CAACF,UAAU;MAACK,MAAM,EAAEA;IAAO;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BlC,OAAA,CAACH,SAAS;MAACQ,KAAK,EAAEA,KAAM;MAAC8B,WAAW,EAAErB;IAAgB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV;AAAChC,EAAA,CA1CQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}